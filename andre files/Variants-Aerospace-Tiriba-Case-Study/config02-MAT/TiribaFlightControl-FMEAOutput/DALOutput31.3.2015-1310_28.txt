Seed: 1427818228
Initial candidate cost 960
Iteration: 1 Current candidate cost 940 Best 940 @Millis: 0
Iteration: 2 Current candidate cost 920 Best 920 @Millis: 2.33791
Iteration: 3 Current candidate cost 910 Best 910 @Millis: 3.9258
Iteration: 4 Current candidate cost 880 Best 880 @Millis: 4.83387
Iteration: 5 Current candidate cost 860 Best 860 @Millis: 5.72716
Iteration: 6 Current candidate cost 850 Best 850 @Millis: 6.62948
Iteration: 7 Current candidate cost 840 Best 840 @Millis: 7.57286
Iteration: 8 Current candidate cost 830 Best 830 @Millis: 8.51171
Iteration: 9 Current candidate cost 820 Best 820 @Millis: 9.49655
Iteration: 10 Current candidate cost 800 Best 800 @Millis: 10.435
Iteration: 11 Current candidate cost 790 Best 790 @Millis: 11.3685
Iteration: 12 Current candidate cost 770 Best 770 @Millis: 12.3361
Iteration: 13 Current candidate cost 760 Best 760 @Millis: 13.2844
Iteration: 14 Current candidate cost 750 Best 750 @Millis: 14.245
Iteration: 15 Current candidate cost 740 Best 740 @Millis: 15.202
Iteration: 16 Current candidate cost 720 Best 720 @Millis: 16.1494
Iteration: 17 Current candidate cost 700 Best 700 @Millis: 17.1117
Iteration: 18 Current candidate cost 680 Best 680 @Millis: 18.0834
Iteration: 19 Current candidate cost 670 Best 670 @Millis: 19.0777
Iteration: 20 Current candidate cost 660 Best 660 @Millis: 20.0949
Iteration: 21 Current candidate cost 650 Best 650 @Millis: 21.136
Iteration: 22 Current candidate cost 640 Best 640 @Millis: 22.1578
Iteration: 23 Current candidate cost 630 Best 630 @Millis: 23.1886
Iteration: 24 Current candidate cost 610 Best 610 @Millis: 24.2863
Iteration: 25 Current candidate cost 590 Best 590 @Millis: 25.3529
Iteration: 26 Current candidate cost 580 Best 580 @Millis: 26.4313
Iteration: 27 Current candidate cost 590 Best 580 @Millis: 27.534
Iteration: 28 Current candidate cost 560 Best 560 @Millis: 28.6214
Iteration: 29 Current candidate cost 580 Best 560 @Millis: 29.7393
Iteration: 30 Current candidate cost 570 Best 560 @Millis: 30.8419
Iteration: 31 Current candidate cost 570 Best 560 @Millis: 31.9668
Iteration: 32 Current candidate cost 570 Best 560 @Millis: 33.0764
Iteration: 33 Current candidate cost 570 Best 560 @Millis: 34.1811
Iteration: 34 Current candidate cost 560 Best 560 @Millis: 35.2739
Iteration: 35 Current candidate cost 570 Best 560 @Millis: 36.3679
Iteration: 36 Current candidate cost 570 Best 560 @Millis: 37.4665
Iteration: 37 Current candidate cost 570 Best 560 @Millis: 38.5667
Iteration: 38 Current candidate cost 570 Best 560 @Millis: 39.655
Iteration: 39 Current candidate cost 560 Best 560 @Millis: 40.763
Iteration: 40 Current candidate cost 570 Best 560 @Millis: 41.8541
Region limit hit, resetting candidate
Iteration: 41 Current candidate cost 950 Best 560 @Millis: 42.9691
Iteration: 42 Current candidate cost 940 Best 560 @Millis: 44.213
Iteration: 43 Current candidate cost 920 Best 560 @Millis: 45.0492
Iteration: 44 Current candidate cost 900 Best 560 @Millis: 45.8858
Iteration: 45 Current candidate cost 880 Best 560 @Millis: 46.7389
Iteration: 46 Current candidate cost 870 Best 560 @Millis: 47.5985
Iteration: 47 Current candidate cost 860 Best 560 @Millis: 48.4618
Iteration: 48 Current candidate cost 850 Best 560 @Millis: 49.3539
Iteration: 49 Current candidate cost 830 Best 560 @Millis: 50.2443
Iteration: 50 Current candidate cost 810 Best 560 @Millis: 51.145
Iteration: 51 Current candidate cost 800 Best 560 @Millis: 52.0601
Iteration: 52 Current candidate cost 780 Best 560 @Millis: 52.9973
Iteration: 53 Current candidate cost 770 Best 560 @Millis: 53.9497
Iteration: 54 Current candidate cost 760 Best 560 @Millis: 54.9193
Iteration: 55 Current candidate cost 750 Best 560 @Millis: 55.8672
Iteration: 56 Current candidate cost 730 Best 560 @Millis: 56.7991
Iteration: 57 Current candidate cost 710 Best 560 @Millis: 57.7166
Iteration: 58 Current candidate cost 700 Best 560 @Millis: 58.6501
Iteration: 59 Current candidate cost 690 Best 560 @Millis: 59.6107
Iteration: 60 Current candidate cost 680 Best 560 @Millis: 60.6071
Iteration: 61 Current candidate cost 660 Best 560 @Millis: 61.5771
Iteration: 62 Current candidate cost 650 Best 560 @Millis: 62.5977
Iteration: 63 Current candidate cost 630 Best 560 @Millis: 63.555
Iteration: 64 Current candidate cost 620 Best 560 @Millis: 64.5181
Iteration: 65 Current candidate cost 610 Best 560 @Millis: 65.4808
Iteration: 66 Current candidate cost 620 Best 560 @Millis: 66.4582
Iteration: 67 Current candidate cost 610 Best 560 @Millis: 67.4989
Iteration: 68 Current candidate cost 620 Best 560 @Millis: 68.5161
Iteration: 69 Current candidate cost 610 Best 560 @Millis: 69.5252
Iteration: 70 Current candidate cost 590 Best 560 @Millis: 70.5741
Iteration: 71 Current candidate cost 570 Best 560 @Millis: 71.5725
Iteration: 72 Current candidate cost 580 Best 560 @Millis: 72.5918
Iteration: 73 Current candidate cost 570 Best 560 @Millis: 73.6571
Iteration: 74 Current candidate cost 580 Best 560 @Millis: 74.7519
Iteration: 75 Current candidate cost 570 Best 560 @Millis: 75.8583
Iteration: 76 Current candidate cost 580 Best 560 @Millis: 76.9466
Iteration: 77 Current candidate cost 570 Best 560 @Millis: 78.025
Iteration: 78 Current candidate cost 580 Best 560 @Millis: 79.1067
Iteration: 79 Current candidate cost 570 Best 560 @Millis: 80.2283
Iteration: 80 Current candidate cost 580 Best 560 @Millis: 81.2735
Iteration: 81 Current candidate cost 550 Best 550 @Millis: 82.3022
Region limit hit, resetting candidate
Iteration: 82 Current candidate cost 940 Best 540 @Millis: 83.3396
Iteration: 83 Current candidate cost 910 Best 540 @Millis: 84.54
Iteration: 84 Current candidate cost 900 Best 540 @Millis: 85.2678
Iteration: 85 Current candidate cost 880 Best 540 @Millis: 86.0219
Iteration: 86 Current candidate cost 860 Best 540 @Millis: 86.7892
Iteration: 87 Current candidate cost 850 Best 540 @Millis: 87.5942
Iteration: 88 Current candidate cost 830 Best 540 @Millis: 88.4149
Iteration: 89 Current candidate cost 810 Best 540 @Millis: 89.2343
Iteration: 90 Current candidate cost 790 Best 540 @Millis: 90.084
Iteration: 91 Current candidate cost 780 Best 540 @Millis: 90.9408
Iteration: 92 Current candidate cost 770 Best 540 @Millis: 91.8131
Iteration: 93 Current candidate cost 750 Best 540 @Millis: 92.6568
Iteration: 94 Current candidate cost 730 Best 540 @Millis: 93.4679
Iteration: 95 Current candidate cost 720 Best 540 @Millis: 94.3419
Iteration: 96 Current candidate cost 710 Best 540 @Millis: 95.218
Iteration: 97 Current candidate cost 690 Best 540 @Millis: 96.1047
Iteration: 98 Current candidate cost 670 Best 540 @Millis: 96.9894
Iteration: 99 Current candidate cost 660 Best 540 @Millis: 97.8888
Iteration: 100 Current candidate cost 640 Best 540 @Millis: 98.7833
Iteration: 101 Current candidate cost 630 Best 540 @Millis: 99.6861
Iteration: 102 Current candidate cost 620 Best 540 @Millis: 100.608
Iteration: 103 Current candidate cost 610 Best 540 @Millis: 101.529
Iteration: 104 Current candidate cost 600 Best 540 @Millis: 102.451
Iteration: 105 Current candidate cost 580 Best 540 @Millis: 103.388
Iteration: 106 Current candidate cost 580 Best 540 @Millis: 104.407
Iteration: 107 Current candidate cost 570 Best 540 @Millis: 105.398
Iteration: 108 Current candidate cost 580 Best 540 @Millis: 106.368
Iteration: 109 Current candidate cost 580 Best 540 @Millis: 107.334
Iteration: 110 Current candidate cost 570 Best 540 @Millis: 108.314
Iteration: 111 Current candidate cost 580 Best 540 @Millis: 109.293
Iteration: 112 Current candidate cost 570 Best 540 @Millis: 110.289
Iteration: 113 Current candidate cost 570 Best 540 @Millis: 111.242
Iteration: 114 Current candidate cost 560 Best 540 @Millis: 112.225
Iteration: 115 Current candidate cost 580 Best 540 @Millis: 113.203
Iteration: 116 Current candidate cost 570 Best 540 @Millis: 114.184
Iteration: 117 Current candidate cost 570 Best 540 @Millis: 115.165
Iteration: 118 Current candidate cost 570 Best 540 @Millis: 116.161
Iteration: 119 Current candidate cost 570 Best 540 @Millis: 117.137
Iteration: 120 Current candidate cost 560 Best 540 @Millis: 118.166
Iteration: 121 Current candidate cost 570 Best 540 @Millis: 119.136
Iteration: 122 Current candidate cost 570 Best 540 @Millis: 120.129
Region limit hit, resetting candidate
Iteration: 123 Current candidate cost 960 Best 540 @Millis: 121.121
Iteration: 124 Current candidate cost 950 Best 540 @Millis: 122.247
Iteration: 125 Current candidate cost 940 Best 540 @Millis: 122.966
Iteration: 126 Current candidate cost 930 Best 540 @Millis: 123.754
Iteration: 127 Current candidate cost 920 Best 540 @Millis: 124.533
Iteration: 128 Current candidate cost 910 Best 540 @Millis: 125.306
Iteration: 129 Current candidate cost 900 Best 540 @Millis: 126.103
Iteration: 130 Current candidate cost 890 Best 540 @Millis: 126.913
Iteration: 131 Current candidate cost 880 Best 540 @Millis: 127.746
Iteration: 132 Current candidate cost 870 Best 540 @Millis: 128.573
Iteration: 133 Current candidate cost 860 Best 540 @Millis: 129.408
Iteration: 134 Current candidate cost 850 Best 540 @Millis: 130.275
Iteration: 135 Current candidate cost 840 Best 540 @Millis: 131.129
Iteration: 136 Current candidate cost 830 Best 540 @Millis: 132.011
Iteration: 137 Current candidate cost 820 Best 540 @Millis: 132.911
Iteration: 138 Current candidate cost 810 Best 540 @Millis: 133.835
Iteration: 139 Current candidate cost 800 Best 540 @Millis: 134.764
Iteration: 140 Current candidate cost 790 Best 540 @Millis: 135.65
Iteration: 141 Current candidate cost 780 Best 540 @Millis: 136.538
Iteration: 142 Current candidate cost 770 Best 540 @Millis: 137.432
Iteration: 143 Current candidate cost 760 Best 540 @Millis: 138.33
Iteration: 144 Current candidate cost 770 Best 540 @Millis: 139.243
Iteration: 145 Current candidate cost 770 Best 540 @Millis: 140.183
Iteration: 146 Current candidate cost 760 Best 540 @Millis: 141.087
Iteration: 147 Current candidate cost 750 Best 540 @Millis: 142
Iteration: 148 Current candidate cost 770 Best 540 @Millis: 142.914
Iteration: 149 Current candidate cost 760 Best 540 @Millis: 143.833
Iteration: 150 Current candidate cost 760 Best 540 @Millis: 144.735
Iteration: 151 Current candidate cost 760 Best 540 @Millis: 145.653
Iteration: 152 Current candidate cost 750 Best 540 @Millis: 146.555
Iteration: 153 Current candidate cost 760 Best 540 @Millis: 147.456
Iteration: 154 Current candidate cost 770 Best 540 @Millis: 148.372
Iteration: 155 Current candidate cost 780 Best 540 @Millis: 149.292
Iteration: 156 Current candidate cost 780 Best 540 @Millis: 150.213
Iteration: 157 Current candidate cost 770 Best 540 @Millis: 151.13
Iteration: 158 Current candidate cost 770 Best 540 @Millis: 152.041
Iteration: 159 Current candidate cost 770 Best 540 @Millis: 152.952
Iteration: 160 Current candidate cost 770 Best 540 @Millis: 153.889
Iteration: 161 Current candidate cost 760 Best 540 @Millis: 154.812
Iteration: 162 Current candidate cost 760 Best 540 @Millis: 155.72
Iteration: 163 Current candidate cost 760 Best 540 @Millis: 156.633
Region limit hit, resetting candidate
Iteration: 164 Current candidate cost 950 Best 540 @Millis: 157.536
Iteration: 165 Current candidate cost 940 Best 540 @Millis: 158.598
Iteration: 166 Current candidate cost 930 Best 540 @Millis: 159.342
Iteration: 167 Current candidate cost 910 Best 540 @Millis: 160.117
Iteration: 168 Current candidate cost 900 Best 540 @Millis: 160.879
Iteration: 169 Current candidate cost 890 Best 540 @Millis: 161.658
Iteration: 170 Current candidate cost 870 Best 540 @Millis: 162.428
Iteration: 171 Current candidate cost 850 Best 540 @Millis: 163.22
Iteration: 172 Current candidate cost 840 Best 540 @Millis: 164.039
Iteration: 173 Current candidate cost 820 Best 540 @Millis: 164.971
Iteration: 174 Current candidate cost 810 Best 540 @Millis: 165.859
Iteration: 175 Current candidate cost 800 Best 540 @Millis: 166.761
Iteration: 176 Current candidate cost 790 Best 540 @Millis: 167.669
Iteration: 177 Current candidate cost 770 Best 540 @Millis: 168.568
Iteration: 178 Current candidate cost 750 Best 540 @Millis: 169.455
Iteration: 179 Current candidate cost 740 Best 540 @Millis: 170.365
Iteration: 180 Current candidate cost 730 Best 540 @Millis: 171.3
Iteration: 181 Current candidate cost 720 Best 540 @Millis: 172.251
Iteration: 182 Current candidate cost 700 Best 540 @Millis: 173.196
Iteration: 183 Current candidate cost 680 Best 540 @Millis: 174.141
Iteration: 184 Current candidate cost 660 Best 540 @Millis: 175.088
Iteration: 185 Current candidate cost 650 Best 540 @Millis: 176.057
Iteration: 186 Current candidate cost 640 Best 540 @Millis: 177.03
Iteration: 187 Current candidate cost 620 Best 540 @Millis: 177.993
Iteration: 188 Current candidate cost 610 Best 540 @Millis: 178.959
Iteration: 189 Current candidate cost 600 Best 540 @Millis: 179.965
Iteration: 190 Current candidate cost 590 Best 540 @Millis: 180.928
Iteration: 191 Current candidate cost 580 Best 540 @Millis: 181.882
Iteration: 192 Current candidate cost 590 Best 540 @Millis: 182.868
Iteration: 193 Current candidate cost 580 Best 540 @Millis: 183.876
Iteration: 194 Current candidate cost 590 Best 540 @Millis: 184.882
Iteration: 195 Current candidate cost 580 Best 540 @Millis: 185.885
Iteration: 196 Current candidate cost 570 Best 540 @Millis: 186.905
Iteration: 197 Current candidate cost 580 Best 540 @Millis: 187.951
Iteration: 198 Current candidate cost 570 Best 540 @Millis: 188.98
Iteration: 199 Current candidate cost 560 Best 540 @Millis: 190.025
Iteration: 200 Current candidate cost 570 Best 540 @Millis: 191.058
Iteration: 201 Current candidate cost 560 Best 540 @Millis: 192.109
Iteration: 202 Current candidate cost 550 Best 540 @Millis: 193.156
Iteration: 203 Current candidate cost 560 Best 540 @Millis: 194.202
Iteration: 204 Current candidate cost 530 Best 530 @Millis: 195.269
Region limit hit, resetting candidate
Iteration: 205 Current candidate cost 970 Best 530 @Millis: 196.342
Iteration: 206 Current candidate cost 950 Best 530 @Millis: 197.585
Iteration: 207 Current candidate cost 940 Best 530 @Millis: 198.292
Iteration: 208 Current candidate cost 930 Best 530 @Millis: 199.031
Iteration: 209 Current candidate cost 920 Best 530 @Millis: 199.78
Iteration: 210 Current candidate cost 900 Best 530 @Millis: 200.508
Iteration: 211 Current candidate cost 890 Best 530 @Millis: 201.262
Iteration: 212 Current candidate cost 870 Best 530 @Millis: 202.031
Iteration: 213 Current candidate cost 850 Best 530 @Millis: 202.804
Iteration: 214 Current candidate cost 840 Best 530 @Millis: 203.586
Iteration: 215 Current candidate cost 830 Best 530 @Millis: 204.401
Iteration: 216 Current candidate cost 810 Best 530 @Millis: 205.199
Iteration: 217 Current candidate cost 800 Best 530 @Millis: 206.002
Iteration: 218 Current candidate cost 780 Best 530 @Millis: 206.819
Iteration: 219 Current candidate cost 750 Best 530 @Millis: 207.648
Iteration: 220 Current candidate cost 740 Best 530 @Millis: 208.467
Iteration: 221 Current candidate cost 730 Best 530 @Millis: 209.323
Iteration: 222 Current candidate cost 720 Best 530 @Millis: 210.179
Iteration: 223 Current candidate cost 700 Best 530 @Millis: 211.031
Iteration: 224 Current candidate cost 680 Best 530 @Millis: 211.888
Iteration: 225 Current candidate cost 670 Best 530 @Millis: 212.763
Iteration: 226 Current candidate cost 650 Best 530 @Millis: 213.657
Iteration: 227 Current candidate cost 640 Best 530 @Millis: 214.541
Iteration: 228 Current candidate cost 630 Best 530 @Millis: 215.44
Iteration: 229 Current candidate cost 620 Best 530 @Millis: 216.356
Iteration: 230 Current candidate cost 610 Best 530 @Millis: 217.287
Iteration: 231 Current candidate cost 600 Best 530 @Millis: 218.214
Iteration: 232 Current candidate cost 610 Best 530 @Millis: 219.169
Iteration: 233 Current candidate cost 600 Best 530 @Millis: 220.145
Iteration: 234 Current candidate cost 580 Best 530 @Millis: 221.161
Iteration: 235 Current candidate cost 590 Best 530 @Millis: 222.149
Iteration: 236 Current candidate cost 580 Best 530 @Millis: 223.147
Iteration: 237 Current candidate cost 560 Best 530 @Millis: 224.234
Iteration: 238 Current candidate cost 570 Best 530 @Millis: 225.376
Iteration: 239 Current candidate cost 560 Best 530 @Millis: 226.438
Iteration: 240 Current candidate cost 570 Best 530 @Millis: 227.484
Iteration: 241 Current candidate cost 560 Best 530 @Millis: 228.57
Iteration: 242 Current candidate cost 570 Best 530 @Millis: 229.67
Iteration: 243 Current candidate cost 560 Best 530 @Millis: 230.716
Iteration: 244 Current candidate cost 550 Best 530 @Millis: 231.794
Iteration: 245 Current candidate cost 560 Best 530 @Millis: 232.884
Region limit hit, resetting candidate
Iteration: 246 Current candidate cost 930 Best 530 @Millis: 233.992
Iteration: 247 Current candidate cost 920 Best 530 @Millis: 235.238
Iteration: 248 Current candidate cost 900 Best 530 @Millis: 236.028
Iteration: 249 Current candidate cost 870 Best 530 @Millis: 236.793
Iteration: 250 Current candidate cost 840 Best 530 @Millis: 237.587
Iteration: 251 Current candidate cost 820 Best 530 @Millis: 238.393
Iteration: 252 Current candidate cost 800 Best 530 @Millis: 239.218
Iteration: 253 Current candidate cost 790 Best 530 @Millis: 240.066
Iteration: 254 Current candidate cost 780 Best 530 @Millis: 240.883
Iteration: 255 Current candidate cost 770 Best 530 @Millis: 241.691
Iteration: 256 Current candidate cost 760 Best 530 @Millis: 242.48
Iteration: 257 Current candidate cost 740 Best 530 @Millis: 243.299
Iteration: 258 Current candidate cost 720 Best 530 @Millis: 244.135
Iteration: 259 Current candidate cost 700 Best 530 @Millis: 244.964
Iteration: 260 Current candidate cost 680 Best 530 @Millis: 245.817
Iteration: 261 Current candidate cost 670 Best 530 @Millis: 246.683
Iteration: 262 Current candidate cost 660 Best 530 @Millis: 247.559
Iteration: 263 Current candidate cost 640 Best 530 @Millis: 248.428
Iteration: 264 Current candidate cost 630 Best 530 @Millis: 249.316
Iteration: 265 Current candidate cost 620 Best 530 @Millis: 250.224
Iteration: 266 Current candidate cost 610 Best 530 @Millis: 251.131
Iteration: 267 Current candidate cost 600 Best 530 @Millis: 252.048
Iteration: 268 Current candidate cost 590 Best 530 @Millis: 252.973
Iteration: 269 Current candidate cost 600 Best 530 @Millis: 253.923
Iteration: 270 Current candidate cost 590 Best 530 @Millis: 254.917
Iteration: 271 Current candidate cost 600 Best 530 @Millis: 255.896
Iteration: 272 Current candidate cost 570 Best 530 @Millis: 256.874
Iteration: 273 Current candidate cost 560 Best 530 @Millis: 257.846
Iteration: 274 Current candidate cost 570 Best 530 @Millis: 258.824
Iteration: 275 Current candidate cost 560 Best 530 @Millis: 259.823
Iteration: 276 Current candidate cost 570 Best 530 @Millis: 260.822
Iteration: 277 Current candidate cost 560 Best 530 @Millis: 261.827
Iteration: 278 Current candidate cost 570 Best 530 @Millis: 262.831
Iteration: 279 Current candidate cost 560 Best 530 @Millis: 263.84
Iteration: 280 Current candidate cost 570 Best 530 @Millis: 264.85
Iteration: 281 Current candidate cost 560 Best 530 @Millis: 265.867
Iteration: 282 Current candidate cost 550 Best 530 @Millis: 266.882
Iteration: 283 Current candidate cost 560 Best 530 @Millis: 267.896
Iteration: 284 Current candidate cost 550 Best 530 @Millis: 268.925
Iteration: 285 Current candidate cost 560 Best 530 @Millis: 269.953
Iteration: 286 Current candidate cost 550 Best 530 @Millis: 271.012
Region limit hit, resetting candidate
Iteration: 287 Current candidate cost 960 Best 530 @Millis: 272.043
Iteration: 288 Current candidate cost 950 Best 530 @Millis: 273.212
Iteration: 289 Current candidate cost 930 Best 530 @Millis: 274.213
Iteration: 290 Current candidate cost 910 Best 530 @Millis: 274.993
Iteration: 291 Current candidate cost 890 Best 530 @Millis: 275.784
Iteration: 292 Current candidate cost 880 Best 530 @Millis: 276.56
Iteration: 293 Current candidate cost 870 Best 530 @Millis: 277.32
Iteration: 294 Current candidate cost 850 Best 530 @Millis: 278.11
Iteration: 295 Current candidate cost 840 Best 530 @Millis: 278.91
Iteration: 296 Current candidate cost 830 Best 530 @Millis: 279.763
Iteration: 297 Current candidate cost 820 Best 530 @Millis: 280.596
Iteration: 298 Current candidate cost 800 Best 530 @Millis: 281.404
Iteration: 299 Current candidate cost 790 Best 530 @Millis: 282.23
Iteration: 300 Current candidate cost 780 Best 530 @Millis: 283.076
Iteration: 301 Current candidate cost 760 Best 530 @Millis: 283.936
Iteration: 302 Current candidate cost 750 Best 530 @Millis: 284.789
Iteration: 303 Current candidate cost 740 Best 530 @Millis: 285.647
Iteration: 304 Current candidate cost 730 Best 530 @Millis: 286.493
Iteration: 305 Current candidate cost 720 Best 530 @Millis: 287.366
Iteration: 306 Current candidate cost 700 Best 530 @Millis: 288.249
Iteration: 307 Current candidate cost 680 Best 530 @Millis: 289.174
Iteration: 308 Current candidate cost 670 Best 530 @Millis: 290.099
Iteration: 309 Current candidate cost 660 Best 530 @Millis: 291.008
Iteration: 310 Current candidate cost 660 Best 530 @Millis: 291.921
Iteration: 311 Current candidate cost 640 Best 530 @Millis: 292.84
Iteration: 312 Current candidate cost 630 Best 530 @Millis: 293.761
Iteration: 313 Current candidate cost 630 Best 530 @Millis: 294.699
Iteration: 314 Current candidate cost 610 Best 530 @Millis: 295.645
Iteration: 315 Current candidate cost 590 Best 530 @Millis: 296.606
Iteration: 316 Current candidate cost 600 Best 530 @Millis: 297.582
Iteration: 317 Current candidate cost 570 Best 530 @Millis: 298.567
Iteration: 318 Current candidate cost 580 Best 530 @Millis: 299.558
Iteration: 319 Current candidate cost 570 Best 530 @Millis: 300.572
Iteration: 320 Current candidate cost 560 Best 530 @Millis: 301.551
Iteration: 321 Current candidate cost 570 Best 530 @Millis: 302.541
Iteration: 322 Current candidate cost 560 Best 530 @Millis: 303.559
Iteration: 323 Current candidate cost 570 Best 530 @Millis: 304.617
Iteration: 324 Current candidate cost 560 Best 530 @Millis: 305.628
Iteration: 325 Current candidate cost 550 Best 530 @Millis: 306.65
Iteration: 326 Current candidate cost 560 Best 530 @Millis: 307.662
Iteration: 327 Current candidate cost 550 Best 530 @Millis: 308.689
Region limit hit, resetting candidate
Iteration: 328 Current candidate cost 990 Best 530 @Millis: 309.719
Iteration: 329 Current candidate cost 980 Best 530 @Millis: 310.888
Iteration: 330 Current candidate cost 970 Best 530 @Millis: 311.633
Iteration: 331 Current candidate cost 960 Best 530 @Millis: 312.356
Iteration: 332 Current candidate cost 950 Best 530 @Millis: 313.092
Iteration: 333 Current candidate cost 940 Best 530 @Millis: 313.847
Iteration: 334 Current candidate cost 930 Best 530 @Millis: 314.578
Iteration: 335 Current candidate cost 920 Best 530 @Millis: 315.34
Iteration: 336 Current candidate cost 910 Best 530 @Millis: 316.103
Iteration: 337 Current candidate cost 900 Best 530 @Millis: 316.884
Iteration: 338 Current candidate cost 890 Best 530 @Millis: 317.687
Iteration: 339 Current candidate cost 880 Best 530 @Millis: 318.469
Iteration: 340 Current candidate cost 870 Best 530 @Millis: 319.287
Iteration: 341 Current candidate cost 860 Best 530 @Millis: 320.175
Iteration: 342 Current candidate cost 850 Best 530 @Millis: 321.044
Iteration: 343 Current candidate cost 840 Best 530 @Millis: 321.88
Iteration: 344 Current candidate cost 830 Best 530 @Millis: 322.721
Iteration: 345 Current candidate cost 820 Best 530 @Millis: 323.614
Iteration: 346 Current candidate cost 810 Best 530 @Millis: 324.55
Iteration: 347 Current candidate cost 800 Best 530 @Millis: 325.454
Iteration: 348 Current candidate cost 790 Best 530 @Millis: 326.349
Iteration: 349 Current candidate cost 780 Best 530 @Millis: 327.259
Iteration: 350 Current candidate cost 780 Best 530 @Millis: 328.176
Iteration: 351 Current candidate cost 770 Best 530 @Millis: 329.072
Iteration: 352 Current candidate cost 780 Best 530 @Millis: 329.969
Iteration: 353 Current candidate cost 770 Best 530 @Millis: 330.864
Iteration: 354 Current candidate cost 760 Best 530 @Millis: 331.773
Iteration: 355 Current candidate cost 770 Best 530 @Millis: 332.676
Iteration: 356 Current candidate cost 760 Best 530 @Millis: 333.627
Iteration: 357 Current candidate cost 750 Best 530 @Millis: 334.563
Iteration: 358 Current candidate cost 740 Best 530 @Millis: 335.474
Iteration: 359 Current candidate cost 750 Best 530 @Millis: 336.412
Iteration: 360 Current candidate cost 760 Best 530 @Millis: 337.352
Iteration: 361 Current candidate cost 750 Best 530 @Millis: 338.303
Iteration: 362 Current candidate cost 760 Best 530 @Millis: 339.238
Iteration: 363 Current candidate cost 740 Best 530 @Millis: 340.174
Iteration: 364 Current candidate cost 750 Best 530 @Millis: 341.113
Iteration: 365 Current candidate cost 740 Best 530 @Millis: 342.069
Iteration: 366 Current candidate cost 750 Best 530 @Millis: 343.041
Iteration: 367 Current candidate cost 730 Best 530 @Millis: 344.013
Iteration: 368 Current candidate cost 740 Best 530 @Millis: 344.959
Region limit hit, resetting candidate
Iteration: 369 Current candidate cost 940 Best 530 @Millis: 345.927
Iteration: 370 Current candidate cost 920 Best 530 @Millis: 347.027
Iteration: 371 Current candidate cost 910 Best 530 @Millis: 347.793
Iteration: 372 Current candidate cost 900 Best 530 @Millis: 348.528
Iteration: 373 Current candidate cost 890 Best 530 @Millis: 349.267
Iteration: 374 Current candidate cost 880 Best 530 @Millis: 350.019
Iteration: 375 Current candidate cost 860 Best 530 @Millis: 350.784
Iteration: 376 Current candidate cost 850 Best 530 @Millis: 351.542
Iteration: 377 Current candidate cost 830 Best 530 @Millis: 352.318
Iteration: 378 Current candidate cost 820 Best 530 @Millis: 353.101
Iteration: 379 Current candidate cost 800 Best 530 @Millis: 353.908
Iteration: 380 Current candidate cost 780 Best 530 @Millis: 354.745
Iteration: 381 Current candidate cost 760 Best 530 @Millis: 355.573
Iteration: 382 Current candidate cost 750 Best 530 @Millis: 356.415
Iteration: 383 Current candidate cost 730 Best 530 @Millis: 357.292
Iteration: 384 Current candidate cost 710 Best 530 @Millis: 358.181
Iteration: 385 Current candidate cost 690 Best 530 @Millis: 359.069
Iteration: 386 Current candidate cost 680 Best 530 @Millis: 359.975
Iteration: 387 Current candidate cost 670 Best 530 @Millis: 360.891
Iteration: 388 Current candidate cost 660 Best 530 @Millis: 361.817
Iteration: 389 Current candidate cost 650 Best 530 @Millis: 362.768
Iteration: 390 Current candidate cost 640 Best 530 @Millis: 363.728
Iteration: 391 Current candidate cost 640 Best 530 @Millis: 364.667
Iteration: 392 Current candidate cost 630 Best 530 @Millis: 365.603
Iteration: 393 Current candidate cost 610 Best 530 @Millis: 366.543
Iteration: 394 Current candidate cost 610 Best 530 @Millis: 367.48
Iteration: 395 Current candidate cost 610 Best 530 @Millis: 368.511
Iteration: 396 Current candidate cost 600 Best 530 @Millis: 369.487
Iteration: 397 Current candidate cost 610 Best 530 @Millis: 370.459
Iteration: 398 Current candidate cost 600 Best 530 @Millis: 371.468
Iteration: 399 Current candidate cost 580 Best 530 @Millis: 372.453
Iteration: 400 Current candidate cost 590 Best 530 @Millis: 373.444
Iteration: 401 Current candidate cost 580 Best 530 @Millis: 374.651
Iteration: 402 Current candidate cost 560 Best 530 @Millis: 375.721
Iteration: 403 Current candidate cost 580 Best 530 @Millis: 376.725
Iteration: 404 Current candidate cost 570 Best 530 @Millis: 377.723
Iteration: 405 Current candidate cost 570 Best 530 @Millis: 378.724
Iteration: 406 Current candidate cost 570 Best 530 @Millis: 379.726
Iteration: 407 Current candidate cost 560 Best 530 @Millis: 380.71
Iteration: 408 Current candidate cost 570 Best 530 @Millis: 381.697
Iteration: 409 Current candidate cost 570 Best 530 @Millis: 382.683
Region limit hit, resetting candidate
Iteration: 410 Current candidate cost 990 Best 530 @Millis: 383.708
Iteration: 411 Current candidate cost 980 Best 530 @Millis: 384.845
Iteration: 412 Current candidate cost 950 Best 530 @Millis: 385.584
Iteration: 413 Current candidate cost 930 Best 530 @Millis: 386.311
Iteration: 414 Current candidate cost 900 Best 530 @Millis: 387.047
Iteration: 415 Current candidate cost 890 Best 530 @Millis: 387.84
Iteration: 416 Current candidate cost 880 Best 530 @Millis: 388.601
Iteration: 417 Current candidate cost 860 Best 530 @Millis: 389.348
Iteration: 418 Current candidate cost 850 Best 530 @Millis: 390.12
Iteration: 419 Current candidate cost 840 Best 530 @Millis: 390.912
Iteration: 420 Current candidate cost 830 Best 530 @Millis: 391.737
Iteration: 421 Current candidate cost 810 Best 530 @Millis: 392.512
Iteration: 422 Current candidate cost 790 Best 530 @Millis: 393.315
Iteration: 423 Current candidate cost 780 Best 530 @Millis: 394.138
Iteration: 424 Current candidate cost 770 Best 530 @Millis: 394.962
Iteration: 425 Current candidate cost 760 Best 530 @Millis: 395.816
Iteration: 426 Current candidate cost 740 Best 530 @Millis: 396.821
Iteration: 427 Current candidate cost 730 Best 530 @Millis: 397.798
Iteration: 428 Current candidate cost 720 Best 530 @Millis: 398.702
Iteration: 429 Current candidate cost 700 Best 530 @Millis: 400.026
Iteration: 430 Current candidate cost 690 Best 530 @Millis: 401.471
Iteration: 431 Current candidate cost 680 Best 530 @Millis: 402.932
Iteration: 432 Current candidate cost 660 Best 530 @Millis: 403.943
Iteration: 433 Current candidate cost 650 Best 530 @Millis: 405.379
Iteration: 434 Current candidate cost 640 Best 530 @Millis: 406.374
Iteration: 435 Current candidate cost 640 Best 530 @Millis: 407.391
Iteration: 436 Current candidate cost 620 Best 530 @Millis: 408.678
Iteration: 437 Current candidate cost 620 Best 530 @Millis: 411.066
Iteration: 438 Current candidate cost 620 Best 530 @Millis: 412.212
Iteration: 439 Current candidate cost 610 Best 530 @Millis: 413.212
Iteration: 440 Current candidate cost 600 Best 530 @Millis: 414.208
Iteration: 441 Current candidate cost 610 Best 530 @Millis: 415.205
Iteration: 442 Current candidate cost 600 Best 530 @Millis: 416.211
Iteration: 443 Current candidate cost 580 Best 530 @Millis: 417.199
Iteration: 444 Current candidate cost 590 Best 530 @Millis: 418.172
Iteration: 445 Current candidate cost 580 Best 530 @Millis: 419.146
Iteration: 446 Current candidate cost 590 Best 530 @Millis: 420.128
Iteration: 447 Current candidate cost 580 Best 530 @Millis: 421.126
Iteration: 448 Current candidate cost 560 Best 530 @Millis: 422.121
Iteration: 449 Current candidate cost 570 Best 530 @Millis: 423.099
Iteration: 450 Current candidate cost 560 Best 530 @Millis: 424.184
Region limit hit, resetting candidate
Iteration: 451 Current candidate cost 970 Best 530 @Millis: 425.213
Iteration: 452 Current candidate cost 960 Best 530 @Millis: 426.396
Iteration: 453 Current candidate cost 940 Best 530 @Millis: 427.16
Iteration: 454 Current candidate cost 920 Best 530 @Millis: 427.92
Iteration: 455 Current candidate cost 900 Best 530 @Millis: 428.689
Iteration: 456 Current candidate cost 890 Best 530 @Millis: 429.49
Iteration: 457 Current candidate cost 880 Best 530 @Millis: 430.304
Iteration: 458 Current candidate cost 870 Best 530 @Millis: 431.123
Iteration: 459 Current candidate cost 850 Best 530 @Millis: 431.944
Iteration: 460 Current candidate cost 840 Best 530 @Millis: 432.772
Iteration: 461 Current candidate cost 820 Best 530 @Millis: 433.614
Iteration: 462 Current candidate cost 810 Best 530 @Millis: 434.451
Iteration: 463 Current candidate cost 790 Best 530 @Millis: 435.308
Iteration: 464 Current candidate cost 780 Best 530 @Millis: 436.189
Iteration: 465 Current candidate cost 760 Best 530 @Millis: 437.087
Iteration: 466 Current candidate cost 750 Best 530 @Millis: 437.978
Iteration: 467 Current candidate cost 740 Best 530 @Millis: 438.871
Iteration: 468 Current candidate cost 730 Best 530 @Millis: 439.777
Iteration: 469 Current candidate cost 720 Best 530 @Millis: 440.688
Iteration: 470 Current candidate cost 710 Best 530 @Millis: 441.592
Iteration: 471 Current candidate cost 700 Best 530 @Millis: 442.498
Iteration: 472 Current candidate cost 690 Best 530 @Millis: 443.524
Iteration: 473 Current candidate cost 670 Best 530 @Millis: 444.43
Iteration: 474 Current candidate cost 650 Best 530 @Millis: 445.333
Iteration: 475 Current candidate cost 630 Best 530 @Millis: 446.251
Iteration: 476 Current candidate cost 620 Best 530 @Millis: 447.18
Iteration: 477 Current candidate cost 610 Best 530 @Millis: 448.144
Iteration: 478 Current candidate cost 610 Best 530 @Millis: 449.083
Iteration: 479 Current candidate cost 590 Best 530 @Millis: 450.025
Iteration: 480 Current candidate cost 590 Best 530 @Millis: 450.968
Iteration: 481 Current candidate cost 590 Best 530 @Millis: 451.942
Iteration: 482 Current candidate cost 580 Best 530 @Millis: 452.911
Iteration: 483 Current candidate cost 590 Best 530 @Millis: 453.882
Iteration: 484 Current candidate cost 580 Best 530 @Millis: 454.87
Iteration: 485 Current candidate cost 560 Best 530 @Millis: 455.852
Iteration: 486 Current candidate cost 570 Best 530 @Millis: 456.835
Iteration: 487 Current candidate cost 570 Best 530 @Millis: 457.824
Iteration: 488 Current candidate cost 570 Best 530 @Millis: 458.815
Iteration: 489 Current candidate cost 570 Best 530 @Millis: 459.8
Iteration: 490 Current candidate cost 570 Best 530 @Millis: 460.811
Iteration: 491 Current candidate cost 580 Best 530 @Millis: 461.803
Region limit hit, resetting candidate
Iteration: 492 Current candidate cost 980 Best 530 @Millis: 462.807
Iteration: 493 Current candidate cost 970 Best 530 @Millis: 463.954
Iteration: 494 Current candidate cost 960 Best 530 @Millis: 464.664
Iteration: 495 Current candidate cost 940 Best 530 @Millis: 465.359
Iteration: 496 Current candidate cost 920 Best 530 @Millis: 466.079
Iteration: 497 Current candidate cost 910 Best 530 @Millis: 466.816
Iteration: 498 Current candidate cost 890 Best 530 @Millis: 467.562
Iteration: 499 Current candidate cost 860 Best 530 @Millis: 468.329
Iteration: 500 Current candidate cost 850 Best 530 @Millis: 469.12
Iteration: 501 Current candidate cost 840 Best 530 @Millis: 469.928
Iteration: 502 Current candidate cost 820 Best 530 @Millis: 470.726
Iteration: 503 Current candidate cost 810 Best 530 @Millis: 471.555
Iteration: 504 Current candidate cost 800 Best 530 @Millis: 472.365
Iteration: 505 Current candidate cost 780 Best 530 @Millis: 473.189
Iteration: 506 Current candidate cost 770 Best 530 @Millis: 474.023
Iteration: 507 Current candidate cost 760 Best 530 @Millis: 474.88
Iteration: 508 Current candidate cost 750 Best 530 @Millis: 475.744
Iteration: 509 Current candidate cost 730 Best 530 @Millis: 476.615
Iteration: 510 Current candidate cost 720 Best 530 @Millis: 477.466
Iteration: 511 Current candidate cost 700 Best 530 @Millis: 478.359
Iteration: 512 Current candidate cost 680 Best 530 @Millis: 479.244
Iteration: 513 Current candidate cost 670 Best 530 @Millis: 480.146
Iteration: 514 Current candidate cost 660 Best 530 @Millis: 481.066
Iteration: 515 Current candidate cost 650 Best 530 @Millis: 482
Iteration: 516 Current candidate cost 640 Best 530 @Millis: 482.947
Iteration: 517 Current candidate cost 650 Best 530 @Millis: 483.895
Iteration: 518 Current candidate cost 640 Best 530 @Millis: 484.855
Iteration: 519 Current candidate cost 620 Best 530 @Millis: 485.836
Iteration: 520 Current candidate cost 600 Best 530 @Millis: 486.816
Iteration: 521 Current candidate cost 590 Best 530 @Millis: 487.789
Iteration: 522 Current candidate cost 570 Best 530 @Millis: 488.797
Iteration: 523 Current candidate cost 550 Best 530 @Millis: 489.789
Iteration: 524 Current candidate cost 560 Best 530 @Millis: 490.804
Iteration: 525 Current candidate cost 540 Best 530 @Millis: 491.837
Iteration: 526 Current candidate cost 530 Best 530 @Millis: 492.873
Iteration: 527 Current candidate cost 550 Best 530 @Millis: 493.925
Iteration: 528 Current candidate cost 540 Best 530 @Millis: 494.985
Iteration: 529 Current candidate cost 550 Best 530 @Millis: 496.023
Iteration: 530 Current candidate cost 540 Best 530 @Millis: 497.075
Iteration: 531 Current candidate cost 550 Best 530 @Millis: 498.126
Iteration: 532 Current candidate cost 540 Best 530 @Millis: 499.182
Region limit hit, resetting candidate
Iteration: 533 Current candidate cost 960 Best 530 @Millis: 500.25
Iteration: 534 Current candidate cost 940 Best 530 @Millis: 501.44
Iteration: 535 Current candidate cost 930 Best 530 @Millis: 502.168
Iteration: 536 Current candidate cost 910 Best 530 @Millis: 502.901
Iteration: 537 Current candidate cost 900 Best 530 @Millis: 503.648
Iteration: 538 Current candidate cost 890 Best 530 @Millis: 504.395
Iteration: 539 Current candidate cost 870 Best 530 @Millis: 505.156
Iteration: 540 Current candidate cost 860 Best 530 @Millis: 505.914
Iteration: 541 Current candidate cost 840 Best 530 @Millis: 506.69
Iteration: 542 Current candidate cost 820 Best 530 @Millis: 507.443
Iteration: 543 Current candidate cost 810 Best 530 @Millis: 508.244
Iteration: 544 Current candidate cost 790 Best 530 @Millis: 509.056
Iteration: 545 Current candidate cost 780 Best 530 @Millis: 509.886
Iteration: 546 Current candidate cost 750 Best 530 @Millis: 510.729
Iteration: 547 Current candidate cost 730 Best 530 @Millis: 511.569
Iteration: 548 Current candidate cost 720 Best 530 @Millis: 512.42
Iteration: 549 Current candidate cost 710 Best 530 @Millis: 513.294
Iteration: 550 Current candidate cost 690 Best 530 @Millis: 514.168
Iteration: 551 Current candidate cost 670 Best 530 @Millis: 515.053
Iteration: 552 Current candidate cost 650 Best 530 @Millis: 515.96
Iteration: 553 Current candidate cost 640 Best 530 @Millis: 516.876
Iteration: 554 Current candidate cost 630 Best 530 @Millis: 517.807
Iteration: 555 Current candidate cost 620 Best 530 @Millis: 518.739
Iteration: 556 Current candidate cost 600 Best 530 @Millis: 519.684
Iteration: 557 Current candidate cost 590 Best 530 @Millis: 520.637
Iteration: 558 Current candidate cost 580 Best 530 @Millis: 521.632
Iteration: 559 Current candidate cost 570 Best 530 @Millis: 522.604
Iteration: 560 Current candidate cost 580 Best 530 @Millis: 523.585
Iteration: 561 Current candidate cost 570 Best 530 @Millis: 524.605
Iteration: 562 Current candidate cost 580 Best 530 @Millis: 525.616
Iteration: 563 Current candidate cost 570 Best 530 @Millis: 526.624
Iteration: 564 Current candidate cost 580 Best 530 @Millis: 527.637
Iteration: 565 Current candidate cost 560 Best 530 @Millis: 528.651
Iteration: 566 Current candidate cost 570 Best 530 @Millis: 529.842
Iteration: 567 Current candidate cost 560 Best 530 @Millis: 530.962
Iteration: 568 Current candidate cost 570 Best 530 @Millis: 532.058
Iteration: 569 Current candidate cost 560 Best 530 @Millis: 533.146
Iteration: 570 Current candidate cost 550 Best 530 @Millis: 534.238
Iteration: 571 Current candidate cost 540 Best 530 @Millis: 535.328
Iteration: 572 Current candidate cost 550 Best 530 @Millis: 536.444
Iteration: 573 Current candidate cost 530 Best 530 @Millis: 537.562
Region limit hit, resetting candidate
Iteration: 574 Current candidate cost 950 Best 530 @Millis: 538.684
Iteration: 575 Current candidate cost 940 Best 530 @Millis: 539.98
Iteration: 576 Current candidate cost 930 Best 530 @Millis: 540.748
Iteration: 577 Current candidate cost 920 Best 530 @Millis: 541.524
Iteration: 578 Current candidate cost 910 Best 530 @Millis: 542.298
Iteration: 579 Current candidate cost 900 Best 530 @Millis: 543.084
Iteration: 580 Current candidate cost 890 Best 530 @Millis: 543.928
Iteration: 581 Current candidate cost 880 Best 530 @Millis: 544.72
Iteration: 582 Current candidate cost 870 Best 530 @Millis: 545.485
Iteration: 583 Current candidate cost 860 Best 530 @Millis: 546.267
Iteration: 584 Current candidate cost 850 Best 530 @Millis: 547.046
Iteration: 585 Current candidate cost 830 Best 530 @Millis: 547.829
Iteration: 586 Current candidate cost 820 Best 530 @Millis: 548.624
Iteration: 587 Current candidate cost 800 Best 530 @Millis: 549.399
Iteration: 588 Current candidate cost 780 Best 530 @Millis: 550.212
Iteration: 589 Current candidate cost 760 Best 530 @Millis: 551.068
Iteration: 590 Current candidate cost 740 Best 530 @Millis: 551.921
Iteration: 591 Current candidate cost 730 Best 530 @Millis: 552.775
Iteration: 592 Current candidate cost 720 Best 530 @Millis: 553.654
Iteration: 593 Current candidate cost 710 Best 530 @Millis: 554.513
Iteration: 594 Current candidate cost 690 Best 530 @Millis: 555.446
Iteration: 595 Current candidate cost 680 Best 530 @Millis: 556.349
Iteration: 596 Current candidate cost 660 Best 530 @Millis: 557.255
Iteration: 597 Current candidate cost 650 Best 530 @Millis: 558.165
Iteration: 598 Current candidate cost 660 Best 530 @Millis: 559.104
Iteration: 599 Current candidate cost 640 Best 530 @Millis: 560.068
Iteration: 600 Current candidate cost 630 Best 530 @Millis: 561.028
Iteration: 601 Current candidate cost 610 Best 530 @Millis: 562.003
Iteration: 602 Current candidate cost 620 Best 530 @Millis: 562.971
Iteration: 603 Current candidate cost 600 Best 530 @Millis: 563.96
Iteration: 604 Current candidate cost 590 Best 530 @Millis: 564.951
Iteration: 605 Current candidate cost 590 Best 530 @Millis: 565.939
Iteration: 606 Current candidate cost 590 Best 530 @Millis: 566.935
Iteration: 607 Current candidate cost 600 Best 530 @Millis: 567.923
Iteration: 608 Current candidate cost 590 Best 530 @Millis: 568.911
Iteration: 609 Current candidate cost 600 Best 530 @Millis: 569.909
Iteration: 610 Current candidate cost 590 Best 530 @Millis: 570.901
Iteration: 611 Current candidate cost 570 Best 530 @Millis: 571.926
Iteration: 612 Current candidate cost 580 Best 530 @Millis: 572.916
Iteration: 613 Current candidate cost 570 Best 530 @Millis: 573.922
Iteration: 614 Current candidate cost 560 Best 530 @Millis: 574.922
Region limit hit, resetting candidate
Iteration: 615 Current candidate cost 940 Best 530 @Millis: 575.93
Iteration: 616 Current candidate cost 930 Best 530 @Millis: 577.087
Iteration: 617 Current candidate cost 920 Best 530 @Millis: 577.847
Iteration: 618 Current candidate cost 910 Best 530 @Millis: 578.63
Iteration: 619 Current candidate cost 900 Best 530 @Millis: 579.395
Iteration: 620 Current candidate cost 880 Best 530 @Millis: 580.203
Iteration: 621 Current candidate cost 870 Best 530 @Millis: 581.005
Iteration: 622 Current candidate cost 860 Best 530 @Millis: 581.822
Iteration: 623 Current candidate cost 840 Best 530 @Millis: 582.633
Iteration: 624 Current candidate cost 830 Best 530 @Millis: 583.414
Iteration: 625 Current candidate cost 810 Best 530 @Millis: 584.245
Iteration: 626 Current candidate cost 800 Best 530 @Millis: 585.07
Iteration: 627 Current candidate cost 780 Best 530 @Millis: 585.942
Iteration: 628 Current candidate cost 760 Best 530 @Millis: 586.81
Iteration: 629 Current candidate cost 740 Best 530 @Millis: 587.682
Iteration: 630 Current candidate cost 730 Best 530 @Millis: 588.583
Iteration: 631 Current candidate cost 720 Best 530 @Millis: 589.455
Iteration: 632 Current candidate cost 710 Best 530 @Millis: 590.354
Iteration: 633 Current candidate cost 690 Best 530 @Millis: 591.266
Iteration: 634 Current candidate cost 680 Best 530 @Millis: 592.191
Iteration: 635 Current candidate cost 660 Best 530 @Millis: 593.119
Iteration: 636 Current candidate cost 640 Best 530 @Millis: 594.042
Iteration: 637 Current candidate cost 630 Best 530 @Millis: 594.97
Iteration: 638 Current candidate cost 620 Best 530 @Millis: 595.919
Iteration: 639 Current candidate cost 610 Best 530 @Millis: 596.871
Iteration: 640 Current candidate cost 610 Best 530 @Millis: 597.831
Iteration: 641 Current candidate cost 600 Best 530 @Millis: 598.81
Iteration: 642 Current candidate cost 610 Best 530 @Millis: 599.791
Iteration: 643 Current candidate cost 600 Best 530 @Millis: 600.77
Iteration: 644 Current candidate cost 610 Best 530 @Millis: 601.773
Iteration: 645 Current candidate cost 580 Best 530 @Millis: 602.768
Iteration: 646 Current candidate cost 590 Best 530 @Millis: 603.78
Iteration: 647 Current candidate cost 570 Best 530 @Millis: 604.79
Iteration: 648 Current candidate cost 570 Best 530 @Millis: 605.815
Iteration: 649 Current candidate cost 570 Best 530 @Millis: 606.837
Iteration: 650 Current candidate cost 560 Best 530 @Millis: 607.841
Iteration: 651 Current candidate cost 580 Best 530 @Millis: 608.84
Iteration: 652 Current candidate cost 590 Best 530 @Millis: 609.85
Iteration: 653 Current candidate cost 590 Best 530 @Millis: 610.855
Iteration: 654 Current candidate cost 590 Best 530 @Millis: 611.857
Iteration: 655 Current candidate cost 590 Best 530 @Millis: 612.857
Region limit hit, resetting candidate
Iteration: 656 Current candidate cost 990 Best 530 @Millis: 613.859
Iteration: 657 Current candidate cost 980 Best 530 @Millis: 614.98
Iteration: 658 Current candidate cost 970 Best 530 @Millis: 615.697
Iteration: 659 Current candidate cost 960 Best 530 @Millis: 616.397
Iteration: 660 Current candidate cost 950 Best 530 @Millis: 617.115
Iteration: 661 Current candidate cost 940 Best 530 @Millis: 617.839
Iteration: 662 Current candidate cost 930 Best 530 @Millis: 618.568
Iteration: 663 Current candidate cost 920 Best 530 @Millis: 619.289
Iteration: 664 Current candidate cost 910 Best 530 @Millis: 620.045
Iteration: 665 Current candidate cost 900 Best 530 @Millis: 620.815
Iteration: 666 Current candidate cost 890 Best 530 @Millis: 621.601
Iteration: 667 Current candidate cost 880 Best 530 @Millis: 622.358
Iteration: 668 Current candidate cost 870 Best 530 @Millis: 623.144
Iteration: 669 Current candidate cost 860 Best 530 @Millis: 624.04
Iteration: 670 Current candidate cost 850 Best 530 @Millis: 624.893
Iteration: 671 Current candidate cost 840 Best 530 @Millis: 625.743
Iteration: 672 Current candidate cost 830 Best 530 @Millis: 626.607
Iteration: 673 Current candidate cost 820 Best 530 @Millis: 627.464
Iteration: 674 Current candidate cost 810 Best 530 @Millis: 628.36
Iteration: 675 Current candidate cost 800 Best 530 @Millis: 629.252
Iteration: 676 Current candidate cost 790 Best 530 @Millis: 630.175
Iteration: 677 Current candidate cost 780 Best 530 @Millis: 631.086
Iteration: 678 Current candidate cost 770 Best 530 @Millis: 632.013
Iteration: 679 Current candidate cost 770 Best 530 @Millis: 632.93
Iteration: 680 Current candidate cost 760 Best 530 @Millis: 633.883
Iteration: 681 Current candidate cost 750 Best 530 @Millis: 634.841
Iteration: 682 Current candidate cost 760 Best 530 @Millis: 635.813
Iteration: 683 Current candidate cost 770 Best 530 @Millis: 636.773
Iteration: 684 Current candidate cost 760 Best 530 @Millis: 637.735
Iteration: 685 Current candidate cost 770 Best 530 @Millis: 638.696
Iteration: 686 Current candidate cost 760 Best 530 @Millis: 639.694
Iteration: 687 Current candidate cost 760 Best 530 @Millis: 640.656
Iteration: 688 Current candidate cost 750 Best 530 @Millis: 641.621
Iteration: 689 Current candidate cost 760 Best 530 @Millis: 642.574
Iteration: 690 Current candidate cost 760 Best 530 @Millis: 643.562
Iteration: 691 Current candidate cost 760 Best 530 @Millis: 644.49
Iteration: 692 Current candidate cost 750 Best 530 @Millis: 645.405
Iteration: 693 Current candidate cost 760 Best 530 @Millis: 646.332
Iteration: 694 Current candidate cost 760 Best 530 @Millis: 647.261
Iteration: 695 Current candidate cost 750 Best 530 @Millis: 648.192
Iteration: 696 Current candidate cost 760 Best 530 @Millis: 649.108
Region limit hit, resetting candidate
Iteration: 697 Current candidate cost 960 Best 530 @Millis: 650.036
Iteration: 698 Current candidate cost 930 Best 530 @Millis: 651.099
Iteration: 699 Current candidate cost 910 Best 530 @Millis: 651.827
Iteration: 700 Current candidate cost 880 Best 530 @Millis: 652.537
Iteration: 701 Current candidate cost 870 Best 530 @Millis: 653.279
Iteration: 702 Current candidate cost 850 Best 530 @Millis: 654.05
Iteration: 703 Current candidate cost 840 Best 530 @Millis: 654.892
Iteration: 704 Current candidate cost 820 Best 530 @Millis: 655.741
Iteration: 705 Current candidate cost 810 Best 530 @Millis: 656.58
Iteration: 706 Current candidate cost 790 Best 530 @Millis: 657.428
Iteration: 707 Current candidate cost 770 Best 530 @Millis: 658.286
Iteration: 708 Current candidate cost 760 Best 530 @Millis: 659.162
Iteration: 709 Current candidate cost 750 Best 530 @Millis: 660.068
Iteration: 710 Current candidate cost 740 Best 530 @Millis: 660.958
Iteration: 711 Current candidate cost 720 Best 530 @Millis: 661.859
Iteration: 712 Current candidate cost 700 Best 530 @Millis: 662.767
Iteration: 713 Current candidate cost 690 Best 530 @Millis: 663.708
Iteration: 714 Current candidate cost 670 Best 530 @Millis: 664.613
Iteration: 715 Current candidate cost 660 Best 530 @Millis: 665.484
Iteration: 716 Current candidate cost 650 Best 530 @Millis: 666.405
Iteration: 717 Current candidate cost 640 Best 530 @Millis: 667.321
Iteration: 718 Current candidate cost 630 Best 530 @Millis: 668.25
Iteration: 719 Current candidate cost 620 Best 530 @Millis: 669.184
Iteration: 720 Current candidate cost 600 Best 530 @Millis: 670.127
Iteration: 721 Current candidate cost 600 Best 530 @Millis: 671.072
Iteration: 722 Current candidate cost 590 Best 530 @Millis: 672.046
Iteration: 723 Current candidate cost 600 Best 530 @Millis: 673.016
Iteration: 724 Current candidate cost 590 Best 530 @Millis: 673.998
Iteration: 725 Current candidate cost 570 Best 530 @Millis: 675.058
Iteration: 726 Current candidate cost 570 Best 530 @Millis: 676.113
Iteration: 727 Current candidate cost 560 Best 530 @Millis: 677.159
Iteration: 728 Current candidate cost 570 Best 530 @Millis: 678.192
Iteration: 729 Current candidate cost 560 Best 530 @Millis: 679.238
Iteration: 730 Current candidate cost 570 Best 530 @Millis: 680.286
Iteration: 731 Current candidate cost 580 Best 530 @Millis: 681.339
Iteration: 732 Current candidate cost 580 Best 530 @Millis: 682.381
Iteration: 733 Current candidate cost 580 Best 530 @Millis: 683.433
Iteration: 734 Current candidate cost 570 Best 530 @Millis: 684.458
Iteration: 735 Current candidate cost 560 Best 530 @Millis: 685.467
Iteration: 736 Current candidate cost 570 Best 530 @Millis: 686.484
Iteration: 737 Current candidate cost 560 Best 530 @Millis: 687.502
Region limit hit, resetting candidate
Iteration: 738 Current candidate cost 960 Best 530 @Millis: 688.553
Iteration: 739 Current candidate cost 950 Best 530 @Millis: 689.716
Iteration: 740 Current candidate cost 930 Best 530 @Millis: 690.405
Iteration: 741 Current candidate cost 920 Best 530 @Millis: 691.112
Iteration: 742 Current candidate cost 900 Best 530 @Millis: 691.857
Iteration: 743 Current candidate cost 890 Best 530 @Millis: 692.589
Iteration: 744 Current candidate cost 880 Best 530 @Millis: 693.336
Iteration: 745 Current candidate cost 860 Best 530 @Millis: 694.123
Iteration: 746 Current candidate cost 850 Best 530 @Millis: 694.892
Iteration: 747 Current candidate cost 830 Best 530 @Millis: 695.671
Iteration: 748 Current candidate cost 810 Best 530 @Millis: 696.441
Iteration: 749 Current candidate cost 800 Best 530 @Millis: 697.253
Iteration: 750 Current candidate cost 790 Best 530 @Millis: 698.075
Iteration: 751 Current candidate cost 780 Best 530 @Millis: 698.896
Iteration: 752 Current candidate cost 760 Best 530 @Millis: 699.74
Iteration: 753 Current candidate cost 750 Best 530 @Millis: 700.679
Iteration: 754 Current candidate cost 740 Best 530 @Millis: 701.599
Iteration: 755 Current candidate cost 720 Best 530 @Millis: 702.514
Iteration: 756 Current candidate cost 700 Best 530 @Millis: 703.409
Iteration: 757 Current candidate cost 690 Best 530 @Millis: 704.331
Iteration: 758 Current candidate cost 680 Best 530 @Millis: 705.335
Iteration: 759 Current candidate cost 670 Best 530 @Millis: 706.259
Iteration: 760 Current candidate cost 670 Best 530 @Millis: 707.194
Iteration: 761 Current candidate cost 650 Best 530 @Millis: 708.157
Iteration: 762 Current candidate cost 640 Best 530 @Millis: 709.108
Iteration: 763 Current candidate cost 630 Best 530 @Millis: 710.16
Iteration: 764 Current candidate cost 640 Best 530 @Millis: 711.149
Iteration: 765 Current candidate cost 630 Best 530 @Millis: 712.178
Iteration: 766 Current candidate cost 610 Best 530 @Millis: 713.229
Iteration: 767 Current candidate cost 590 Best 530 @Millis: 714.248
Iteration: 768 Current candidate cost 600 Best 530 @Millis: 715.277
Iteration: 769 Current candidate cost 570 Best 530 @Millis: 716.291
Iteration: 770 Current candidate cost 570 Best 530 @Millis: 717.3
Iteration: 771 Current candidate cost 570 Best 530 @Millis: 718.32
Iteration: 772 Current candidate cost 570 Best 530 @Millis: 719.318
Iteration: 773 Current candidate cost 560 Best 530 @Millis: 720.339
Iteration: 774 Current candidate cost 570 Best 530 @Millis: 721.338
Iteration: 775 Current candidate cost 580 Best 530 @Millis: 722.401
Iteration: 776 Current candidate cost 570 Best 530 @Millis: 723.422
Iteration: 777 Current candidate cost 570 Best 530 @Millis: 724.53
Iteration: 778 Current candidate cost 570 Best 530 @Millis: 725.543
Region limit hit, resetting candidate
Iteration: 779 Current candidate cost 960 Best 530 @Millis: 726.589
Iteration: 780 Current candidate cost 940 Best 530 @Millis: 727.751
Iteration: 781 Current candidate cost 910 Best 530 @Millis: 728.474
Iteration: 782 Current candidate cost 900 Best 530 @Millis: 729.251
Iteration: 783 Current candidate cost 880 Best 530 @Millis: 730.026
Iteration: 784 Current candidate cost 860 Best 530 @Millis: 730.803
Iteration: 785 Current candidate cost 850 Best 530 @Millis: 731.609
Iteration: 786 Current candidate cost 830 Best 530 @Millis: 732.418
Iteration: 787 Current candidate cost 820 Best 530 @Millis: 733.236
Iteration: 788 Current candidate cost 810 Best 530 @Millis: 734.156
Iteration: 789 Current candidate cost 790 Best 530 @Millis: 735.022
Iteration: 790 Current candidate cost 770 Best 530 @Millis: 735.873
Iteration: 791 Current candidate cost 760 Best 530 @Millis: 736.736
Iteration: 792 Current candidate cost 750 Best 530 @Millis: 737.615
Iteration: 793 Current candidate cost 740 Best 530 @Millis: 738.495
Iteration: 794 Current candidate cost 730 Best 530 @Millis: 739.365
Iteration: 795 Current candidate cost 710 Best 530 @Millis: 740.248
Iteration: 796 Current candidate cost 700 Best 530 @Millis: 741.136
Iteration: 797 Current candidate cost 690 Best 530 @Millis: 742.028
Iteration: 798 Current candidate cost 670 Best 530 @Millis: 742.929
Iteration: 799 Current candidate cost 660 Best 530 @Millis: 743.861
Iteration: 800 Current candidate cost 650 Best 530 @Millis: 744.82
Iteration: 801 Current candidate cost 640 Best 530 @Millis: 745.759
Iteration: 802 Current candidate cost 640 Best 530 @Millis: 746.698
Iteration: 803 Current candidate cost 630 Best 530 @Millis: 747.657
Iteration: 804 Current candidate cost 610 Best 530 @Millis: 748.597
Iteration: 805 Current candidate cost 610 Best 530 @Millis: 749.543
Iteration: 806 Current candidate cost 590 Best 530 @Millis: 750.505
Iteration: 807 Current candidate cost 590 Best 530 @Millis: 751.472
Iteration: 808 Current candidate cost 580 Best 530 @Millis: 752.463
Iteration: 809 Current candidate cost 590 Best 530 @Millis: 753.438
Iteration: 810 Current candidate cost 580 Best 530 @Millis: 754.436
Iteration: 811 Current candidate cost 590 Best 530 @Millis: 755.463
Iteration: 812 Current candidate cost 560 Best 530 @Millis: 756.458
Iteration: 813 Current candidate cost 570 Best 530 @Millis: 757.459
Iteration: 814 Current candidate cost 570 Best 530 @Millis: 758.451
Iteration: 815 Current candidate cost 560 Best 530 @Millis: 759.448
Iteration: 816 Current candidate cost 580 Best 530 @Millis: 760.442
Iteration: 817 Current candidate cost 570 Best 530 @Millis: 761.441
Iteration: 818 Current candidate cost 560 Best 530 @Millis: 762.422
Iteration: 819 Current candidate cost 570 Best 530 @Millis: 763.41
Region limit hit, resetting candidate
Iteration: 820 Current candidate cost 970 Best 530 @Millis: 764.424
Iteration: 821 Current candidate cost 960 Best 530 @Millis: 765.57
Iteration: 822 Current candidate cost 950 Best 530 @Millis: 766.313
Iteration: 823 Current candidate cost 940 Best 530 @Millis: 767.061
Iteration: 824 Current candidate cost 930 Best 530 @Millis: 767.851
Iteration: 825 Current candidate cost 920 Best 530 @Millis: 768.624
Iteration: 826 Current candidate cost 910 Best 530 @Millis: 769.367
Iteration: 827 Current candidate cost 900 Best 530 @Millis: 770.165
Iteration: 828 Current candidate cost 890 Best 530 @Millis: 770.964
Iteration: 829 Current candidate cost 880 Best 530 @Millis: 771.768
Iteration: 830 Current candidate cost 870 Best 530 @Millis: 772.603
Iteration: 831 Current candidate cost 860 Best 530 @Millis: 773.424
Iteration: 832 Current candidate cost 850 Best 530 @Millis: 774.409
Iteration: 833 Current candidate cost 840 Best 530 @Millis: 775.315
Iteration: 834 Current candidate cost 830 Best 530 @Millis: 776.21
Iteration: 835 Current candidate cost 820 Best 530 @Millis: 777.079
Iteration: 836 Current candidate cost 810 Best 530 @Millis: 777.945
Iteration: 837 Current candidate cost 800 Best 530 @Millis: 778.815
Iteration: 838 Current candidate cost 790 Best 530 @Millis: 779.72
Iteration: 839 Current candidate cost 790 Best 530 @Millis: 780.627
Iteration: 840 Current candidate cost 780 Best 530 @Millis: 781.537
Iteration: 841 Current candidate cost 770 Best 530 @Millis: 782.458
Iteration: 842 Current candidate cost 770 Best 530 @Millis: 783.415
Iteration: 843 Current candidate cost 770 Best 530 @Millis: 784.384
Iteration: 844 Current candidate cost 770 Best 530 @Millis: 785.384
Iteration: 845 Current candidate cost 760 Best 530 @Millis: 786.297
Iteration: 846 Current candidate cost 770 Best 530 @Millis: 787.213
Iteration: 847 Current candidate cost 760 Best 530 @Millis: 788.134
Iteration: 848 Current candidate cost 770 Best 530 @Millis: 789.052
Iteration: 849 Current candidate cost 750 Best 530 @Millis: 789.973
Iteration: 850 Current candidate cost 760 Best 530 @Millis: 790.892
Iteration: 851 Current candidate cost 750 Best 530 @Millis: 791.848
Iteration: 852 Current candidate cost 760 Best 530 @Millis: 792.776
Iteration: 853 Current candidate cost 750 Best 530 @Millis: 793.718
Iteration: 854 Current candidate cost 760 Best 530 @Millis: 794.661
Iteration: 855 Current candidate cost 740 Best 530 @Millis: 795.657
Iteration: 856 Current candidate cost 750 Best 530 @Millis: 796.629
Iteration: 857 Current candidate cost 730 Best 530 @Millis: 797.632
Iteration: 858 Current candidate cost 750 Best 530 @Millis: 798.59
Iteration: 859 Current candidate cost 740 Best 530 @Millis: 799.606
Iteration: 860 Current candidate cost 750 Best 530 @Millis: 800.557
Region limit hit, resetting candidate
Iteration: 861 Current candidate cost 930 Best 530 @Millis: 801.572
Iteration: 862 Current candidate cost 910 Best 530 @Millis: 802.672
Iteration: 863 Current candidate cost 880 Best 530 @Millis: 803.412
Iteration: 864 Current candidate cost 870 Best 530 @Millis: 804.201
Iteration: 865 Current candidate cost 860 Best 530 @Millis: 805.049
Iteration: 866 Current candidate cost 840 Best 530 @Millis: 805.889
Iteration: 867 Current candidate cost 830 Best 530 @Millis: 806.731
Iteration: 868 Current candidate cost 820 Best 530 @Millis: 807.609
Iteration: 869 Current candidate cost 810 Best 530 @Millis: 808.417
Iteration: 870 Current candidate cost 790 Best 530 @Millis: 809.248
Iteration: 871 Current candidate cost 780 Best 530 @Millis: 810.079
Iteration: 872 Current candidate cost 770 Best 530 @Millis: 810.944
Iteration: 873 Current candidate cost 750 Best 530 @Millis: 811.805
Iteration: 874 Current candidate cost 730 Best 530 @Millis: 812.664
Iteration: 875 Current candidate cost 710 Best 530 @Millis: 813.517
Iteration: 876 Current candidate cost 690 Best 530 @Millis: 814.413
Iteration: 877 Current candidate cost 680 Best 530 @Millis: 815.318
Iteration: 878 Current candidate cost 670 Best 530 @Millis: 816.253
Iteration: 879 Current candidate cost 660 Best 530 @Millis: 817.157
Iteration: 880 Current candidate cost 650 Best 530 @Millis: 818.069
Iteration: 881 Current candidate cost 640 Best 530 @Millis: 818.986
Iteration: 882 Current candidate cost 630 Best 530 @Millis: 819.911
Iteration: 883 Current candidate cost 620 Best 530 @Millis: 820.841
Iteration: 884 Current candidate cost 630 Best 530 @Millis: 821.78
Iteration: 885 Current candidate cost 600 Best 530 @Millis: 822.753
Iteration: 886 Current candidate cost 580 Best 530 @Millis: 823.792
Iteration: 887 Current candidate cost 590 Best 530 @Millis: 824.808
Iteration: 888 Current candidate cost 580 Best 530 @Millis: 825.838
Iteration: 889 Current candidate cost 590 Best 530 @Millis: 826.88
Iteration: 890 Current candidate cost 580 Best 530 @Millis: 827.872
Iteration: 891 Current candidate cost 590 Best 530 @Millis: 828.861
Iteration: 892 Current candidate cost 560 Best 530 @Millis: 829.849
Iteration: 893 Current candidate cost 570 Best 530 @Millis: 830.833
Iteration: 894 Current candidate cost 570 Best 530 @Millis: 831.825
Iteration: 895 Current candidate cost 560 Best 530 @Millis: 832.813
Iteration: 896 Current candidate cost 570 Best 530 @Millis: 833.808
Iteration: 897 Current candidate cost 570 Best 530 @Millis: 834.793
Iteration: 898 Current candidate cost 570 Best 530 @Millis: 835.778
Iteration: 899 Current candidate cost 570 Best 530 @Millis: 836.827
Iteration: 900 Current candidate cost 570 Best 530 @Millis: 837.888
Iteration: 901 Current candidate cost 560 Best 530 @Millis: 838.924
Region limit hit, resetting candidate
Iteration: 902 Current candidate cost 980 Best 530 @Millis: 839.962
Iteration: 903 Current candidate cost 960 Best 530 @Millis: 841.084
Iteration: 904 Current candidate cost 950 Best 530 @Millis: 841.791
Iteration: 905 Current candidate cost 940 Best 530 @Millis: 842.481
Iteration: 906 Current candidate cost 930 Best 530 @Millis: 843.22
Iteration: 907 Current candidate cost 910 Best 530 @Millis: 843.963
Iteration: 908 Current candidate cost 900 Best 530 @Millis: 844.716
Iteration: 909 Current candidate cost 870 Best 530 @Millis: 845.453
Iteration: 910 Current candidate cost 860 Best 530 @Millis: 846.225
Iteration: 911 Current candidate cost 840 Best 530 @Millis: 847.016
Iteration: 912 Current candidate cost 830 Best 530 @Millis: 847.793
Iteration: 913 Current candidate cost 820 Best 530 @Millis: 848.584
Iteration: 914 Current candidate cost 810 Best 530 @Millis: 849.36
Iteration: 915 Current candidate cost 800 Best 530 @Millis: 850.198
Iteration: 916 Current candidate cost 790 Best 530 @Millis: 851.009
Iteration: 917 Current candidate cost 770 Best 530 @Millis: 851.823
Iteration: 918 Current candidate cost 750 Best 530 @Millis: 852.645
Iteration: 919 Current candidate cost 730 Best 530 @Millis: 853.461
Iteration: 920 Current candidate cost 710 Best 530 @Millis: 854.323
Iteration: 921 Current candidate cost 690 Best 530 @Millis: 855.178
Iteration: 922 Current candidate cost 670 Best 530 @Millis: 856.133
Iteration: 923 Current candidate cost 650 Best 530 @Millis: 857.032
Iteration: 924 Current candidate cost 640 Best 530 @Millis: 857.944
Iteration: 925 Current candidate cost 630 Best 530 @Millis: 858.858
Iteration: 926 Current candidate cost 620 Best 530 @Millis: 859.799
Iteration: 927 Current candidate cost 610 Best 530 @Millis: 860.734
Iteration: 928 Current candidate cost 600 Best 530 @Millis: 861.693
Iteration: 929 Current candidate cost 600 Best 530 @Millis: 862.661
Iteration: 930 Current candidate cost 590 Best 530 @Millis: 863.652
Iteration: 931 Current candidate cost 590 Best 530 @Millis: 864.618
Iteration: 932 Current candidate cost 580 Best 530 @Millis: 865.604
Iteration: 933 Current candidate cost 560 Best 530 @Millis: 866.603
Iteration: 934 Current candidate cost 570 Best 530 @Millis: 867.663
Iteration: 935 Current candidate cost 570 Best 530 @Millis: 868.655
Iteration: 936 Current candidate cost 560 Best 530 @Millis: 869.647
Iteration: 937 Current candidate cost 570 Best 530 @Millis: 870.653
Iteration: 938 Current candidate cost 580 Best 530 @Millis: 871.654
Iteration: 939 Current candidate cost 580 Best 530 @Millis: 872.774
Iteration: 940 Current candidate cost 570 Best 530 @Millis: 874.244
Iteration: 941 Current candidate cost 570 Best 530 @Millis: 875.374
Iteration: 942 Current candidate cost 560 Best 530 @Millis: 876.515
Region limit hit, resetting candidate
Iteration: 943 Current candidate cost 990 Best 530 @Millis: 877.583
Iteration: 944 Current candidate cost 960 Best 530 @Millis: 878.734
Iteration: 945 Current candidate cost 950 Best 530 @Millis: 879.422
Iteration: 946 Current candidate cost 940 Best 530 @Millis: 880.145
Iteration: 947 Current candidate cost 930 Best 530 @Millis: 880.861
Iteration: 948 Current candidate cost 910 Best 530 @Millis: 881.567
Iteration: 949 Current candidate cost 890 Best 530 @Millis: 882.283
Iteration: 950 Current candidate cost 880 Best 530 @Millis: 883.038
Iteration: 951 Current candidate cost 860 Best 530 @Millis: 883.826
Iteration: 952 Current candidate cost 850 Best 530 @Millis: 884.607
Iteration: 953 Current candidate cost 830 Best 530 @Millis: 885.366
Iteration: 954 Current candidate cost 820 Best 530 @Millis: 886.144
Iteration: 955 Current candidate cost 810 Best 530 @Millis: 886.959
Iteration: 956 Current candidate cost 790 Best 530 @Millis: 887.775
Iteration: 957 Current candidate cost 780 Best 530 @Millis: 888.595
Iteration: 958 Current candidate cost 760 Best 530 @Millis: 889.433
Iteration: 959 Current candidate cost 740 Best 530 @Millis: 890.289
Iteration: 960 Current candidate cost 730 Best 530 @Millis: 891.14
Iteration: 961 Current candidate cost 720 Best 530 @Millis: 892.023
Iteration: 962 Current candidate cost 710 Best 530 @Millis: 892.879
Iteration: 963 Current candidate cost 700 Best 530 @Millis: 893.742
Iteration: 964 Current candidate cost 690 Best 530 @Millis: 894.607
Iteration: 965 Current candidate cost 680 Best 530 @Millis: 895.458
Iteration: 966 Current candidate cost 670 Best 530 @Millis: 896.335
Iteration: 967 Current candidate cost 660 Best 530 @Millis: 897.236
Iteration: 968 Current candidate cost 660 Best 530 @Millis: 898.122
Iteration: 969 Current candidate cost 650 Best 530 @Millis: 899.017
Iteration: 970 Current candidate cost 630 Best 530 @Millis: 899.951
Iteration: 971 Current candidate cost 610 Best 530 @Millis: 900.887
Iteration: 972 Current candidate cost 620 Best 530 @Millis: 901.824
Iteration: 973 Current candidate cost 590 Best 530 @Millis: 902.767
Iteration: 974 Current candidate cost 600 Best 530 @Millis: 903.738
Iteration: 975 Current candidate cost 570 Best 530 @Millis: 904.706
Iteration: 976 Current candidate cost 580 Best 530 @Millis: 905.725
Iteration: 977 Current candidate cost 570 Best 530 @Millis: 906.814
Iteration: 978 Current candidate cost 570 Best 530 @Millis: 907.886
Iteration: 979 Current candidate cost 580 Best 530 @Millis: 908.877
Iteration: 980 Current candidate cost 570 Best 530 @Millis: 909.892
Iteration: 981 Current candidate cost 580 Best 530 @Millis: 910.94
Iteration: 982 Current candidate cost 560 Best 530 @Millis: 911.978
Iteration: 983 Current candidate cost 570 Best 530 @Millis: 913.003
Region limit hit, resetting candidate
Iteration: 984 Current candidate cost 970 Best 530 @Millis: 914.042
Iteration: 985 Current candidate cost 960 Best 530 @Millis: 915.214
Iteration: 986 Current candidate cost 950 Best 530 @Millis: 915.953
Iteration: 987 Current candidate cost 940 Best 530 @Millis: 916.719
Iteration: 988 Current candidate cost 930 Best 530 @Millis: 917.493
Iteration: 989 Current candidate cost 920 Best 530 @Millis: 918.265
Iteration: 990 Current candidate cost 910 Best 530 @Millis: 919.042
Iteration: 991 Current candidate cost 900 Best 530 @Millis: 919.891
Iteration: 992 Current candidate cost 890 Best 530 @Millis: 920.703
Iteration: 993 Current candidate cost 880 Best 530 @Millis: 921.547
Iteration: 994 Current candidate cost 870 Best 530 @Millis: 922.389
Iteration: 995 Current candidate cost 860 Best 530 @Millis: 923.226
Iteration: 996 Current candidate cost 850 Best 530 @Millis: 924.114
Iteration: 997 Current candidate cost 840 Best 530 @Millis: 924.974
Iteration: 998 Current candidate cost 830 Best 530 @Millis: 925.841
Iteration: 999 Current candidate cost 820 Best 530 @Millis: 926.713
Iteration: 1000 Current candidate cost 810 Best 530 @Millis: 927.652
Optimization search minutes 0.0154753
Ran for 0.929466 seconds 
Best allocation cost 530
Found lowest allocation: 31
Region shift count: 24
Best Allocation Found @Millis: 195.269
Best Allocation is 
446, BarometricProcessor.OFailure1 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
1173, PilotJoystick.OFailure1 has a DAL of 4
Decomposed Effect No_Pilot_Commands Type BY ZERO
447, BarometricProcessor.OFailure2 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
947, PWMDecoder.OFailure1 has a DAL of 4
Decomposed Effect No_Pilot_Commands Type BY ZERO
965, PWMDecoder.BusCreatorX.OFailure1 has a DAL of 4
Decomposed Effect No_Pilot_Commands Type BY ZERO
613, BusCreator1.OFailure1 has a DAL of 4
Decomposed Effect No_Pilot_Commands Type BY ZERO
677, BusCreator3.OFailure1 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
858, IMUSensor.OFailure1 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
701, BusCreator4.OFailure1 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
747, FailSafeController.OFailure1 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
1174, PilotJoystick.OFailure2 has a DAL of 4
Decomposed Effect No_Pilot_Commands Type BY ZERO
773, FlightControlMixer.OFailure1 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
1186, PressureeSensor.OFailure2 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
1185, PressureeSensor.OFailure1 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
614, BusCreator1.VFailure1 has a DAL of 0
Decomposed Effect Value_Pilot_Commands Type BY TWO
1176, PilotJoystick.VFailure2 has a DAL of 0
Decomposed Effect Value_Pilot_Commands Type BY TWO
448, BarometricProcessor.OFailure3 has a DAL of 2
Decomposed Effect Value_Pilot_Commands Type BY ZERO
966, PWMDecoder.BusCreatorX.VFailure1 has a DAL of 0
Decomposed Effect Value_Pilot_Commands Type BY TWO
592, BusCreator.VFailure1 has a DAL of 2
Decomposed Effect Value_Pilot_Commands Type BY ZERO
1175, PilotJoystick.VFailure1 has a DAL of 0
Decomposed Effect Value_Pilot_Commands Type BY TWO
748, FailSafeController.VFailure1 has a DAL of 2
Decomposed Effect Value_Pilot_Commands Type BY ZERO
860, IMUSensor.OFailure2 has a DAL of 2
Decomposed Effect Value_Pilot_Commands Type BY ZERO
948, PWMDecoder.VFailure1 has a DAL of 0
Decomposed Effect Value_Pilot_Commands Type BY TWO
591, BusCreator.OFailure1 has a DAL of 2
Decomposed Effect No_Pilot_Commands Type BY TWO
Using costs: DAL A = 50 DAL B = 40 DAL C = 20 DAL D = 10 DAL E = 0 
